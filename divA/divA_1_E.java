/*
 * E. Another Pair of Triangles
 * 
 * // Условие
 * Ограничение времени 	2 секунды
 * Ограничение памяти 	512Mb
 * Ввод 	стандартный ввод или input.txt
 * Вывод 	стандартный вывод или output.txt
 * 
 * Среди треугольников периметра P с целыми длинами сторон найдите треугольник наибольшей
 * и наименьшей ненулевой площади.
 * 
 * // Формат ввода
 * Входные данные содержат одно целое число P — периметр треугольника (3 ≤ P ≤ 10^9).
 * 
 * // Формат вывода
 * В первой строке выведите три целых числа — длины сторон треугольника с заданным
 * периметром и наибольшей площадью. Во второй сторке выведите три целых числа — длины
 * сторон треугольника с заданным периметром и наименьшей ненулевой площадью. Если решений
 * несколько, выведите любое. Если целочисленных треугольников заданного периметра 
 * не существует, выведите -1. 
 * 
 * // Примеры
 * 3
 * 
 * 1 1 1
 * 1 1 1
 * 
 * 4
 * 
 * -1
 * 
 * // Решение
 * Задача исторически известна, как задача Дидоны, но узнал я об этом после, а вообще 
 * руководствовался следующими соображениями.
 * Если взять одну из сторон в качестве переменной и уменьшать её, то при приближении к
 * нулю треугольник вырождается в линию с площадью, стремящейся к нулю. Таким образом, 
 * наименьшей площадью среди целочисленных треугольников будет иметь тот, у которого одна 
 * из сторон равна 1, либо 2, если составить треугольник заданного периметра со стороной 1
 * невозможно (если периметр четный, то разность оставшихся сторон тоже будет равна 1 и в
 * этом случае треугольник вырождается в линию). 
 * Если аналогичным образом увеличивать одну из сторон, уменьшая остальные в равной
 * пропорции, то площадь треугольника будет увеличиваться до тех пор, пока первая сторона
 * не станет больше любой другой. В условиях целочисленности, разделим периметр на 3 с
 * округлением вниз - это и будет наибольшая возможная длина самой меньшей из сторон.
 * Остаток периметра делим на 2 с округлением вниз, получая две оставшиеся стороны.
 * 
 * Не имеет смысла рассматривать периметр меньше 3, поскольку минимальная длина стороны
 * согласно условию - 1.
 * Частным случаем является треугольник с периметром 4. Если, согласно выводам выше, в 
 * качестве наименьшей стороны взять сторону длиной 2, то результат 2-1-1 повторит тот, 
 * которого мы старались избежать: 1-1-2. Для последующих "чётных" треугольников такой
 * проблемы нет: 6 -> 2-2-2, 8 -> 2-3-3, ...;
 * 
 */

import java.util.Scanner;

public class Test {

    public static void main(String args[]) {
        Scanner scan = new Scanner(System.in);
        int P = Integer.parseInt(scan.nextLine());

        if (P > 2 && P != 4) {
            int a, b, c;
            a = P / 3;
            b = (P - a) / 2;
            c = P - a - b;
            System.out.println(a + " " + b + " " + c);
            
            a = (P % 2 == 1) ? 1 : 2;
            b = c = (P - 1) / 2;
            System.out.println(a + " " + b + " " + c);
        } else {
            System.out.println(-1);
        }
    }
}