/*
 * E. Точка и треугольник
 * 
 * // Условие
 * Ограничение времени 	1 секунда
 * Ограничение памяти 	64Mb
 * Ввод 	стандартный ввод или input.txt
 * Вывод 	стандартный вывод или output.txt
 * 
 * На координатной плоскости расположены равнобедренный прямоугольный треугольник ABC 
 * с длиной катета d и точка X. Катеты треугольника лежат на осях координат, а вершины 
 * расположены в точках: A (0,0), B (d,0), C (0,d).
 * 
 * Напишите программу, которая определяет взаимное расположение точки X и треугольника.
 * Если точка X расположена внутри или на сторонах треугольника, выведите 0. Если же точка
 * находится вне треугольника, выведите номер ближайшей к ней вершины.
 * 
 * // Формат ввода
 * Сначала вводится натуральное число d (не превосходящее 1000), а затем координаты
 * точки X – два целых числа из диапазона от ­1000 до 1000.
 * 
 * // Формат вывода
 * Если точка лежит внутри, на стороне треугольника или совпадает с одной из вершин, 
 * то выведите число 0. Если точка лежит вне треугольника, то выведите номер вершины 
 * треугольника, к которой она расположена ближе всего (1 – к вершине A, 2 – к B, 3 – к C).
 * Если точка расположена на одинаковом расстоянии от двух вершин, выведите ту вершину,
 * номер которой меньше. 
 * 
 * // Примеры
 * 5
 * 1 1
 * 
 * 0
 * 
 * 3
 * -1 -1
 * 
 * 1
 * 
 * 4
 * 4 4
 * 
 * 2
 * 
 * 4
 * 2 2
 * 
 * 0
 * 
 * // Примечания
 * Комментарии к примерам тестов
 * 
 * 1. Точка лежит внутри треугольника.
 * 2. Точка лежит вне треугольника и ближе всего к ней вершина A
 * 3. Точка лежит на равном расстоянии от вершин B и C,в этом случае нужно вывести ту вершину,
 *    у которой номер меньше, т.е. выведено должно быть число 2
 * 4. Точка лежит на стороне треугольника.
 * 
 */

import java.util.Scanner;

public class Test {

    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);
        int d = Integer.parseInt(scanner.nextLine());
        String[] point = scanner.nextLine().split(" +");
        int x = Integer.parseInt(point[0]), y = Integer.parseInt(point[1]);

        if (y <= -x + d && y >= 0 && x >= 0)
            System.out.println(0);
        else {
            double[] dis = new double[]{
                    Math.pow(x, 2) + Math.pow(y, 2),
                    Math.pow(x - d, 2) + Math.pow(y, 2),
                    Math.pow(x, 2) + Math.pow(y - d, 2)
            };
            double minValue = dis[0];
            int minIndex = 0;
            for (int i = 0; i < dis.length; i++) {
                if (dis[i] < minValue) {
                    minValue = dis[i];
                    minIndex = i;
                }
            }
            System.out.println(minIndex + 1);
        }
    }
}